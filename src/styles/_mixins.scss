@use 'sass:math';
// Mixin styles
// Only define non-rendering styles
// Mixins are automatically accessible globally within scss

// Responsive Breakpoints
$breakpoints-small: 768px;
$breakpoints-medium: 1024px;
$breakpoints-large: 1280px;
$breakpoints-xlarge: 1440px;

@mixin breakpoint($point) {
  @if $point == small {
    @media (min-width: $breakpoints-small) {
      @content;
    }
  } @else if $point == medium {
    @media (min-width: $breakpoints-medium) {
      @content;
    }
  } @else if $point == large {
    @media (min-width: $breakpoints-large) {
      @content;
    }
  } @else if $point == xlarge {
    @media (min-width: $breakpoints-xlarge) {
      @content;
    }
  }
}

// Layout
@mixin container {
  width: 100%;
  margin: 0 auto;
  padding-left: 20px;
  padding-right: 20px;
  transition: all 0.3s ease-in-out;

  @include breakpoint(small) {
    width: 768px;
  }

  @include breakpoint(medium) {
    width: 1024px;
    padding-left: 40px;
    padding-right: 40px;
    margin: 0 auto;
  }

  @include breakpoint(large) {
    width: 1280px;
    margin: 0 auto;
  }

  @include breakpoint(xlarge) {
    width: 1440px;
    margin: 0 auto;
  }
}

// Rem conversion
@function toRem($value) {
  $remValue: math.div($value, 16) + rem;
  @return $remValue;
}

// buttons

@mixin button-primary($size: '') {
  @include font-display;
  text-decoration: none;
  cursor: pointer;
  color: $color-blue-700;
  @include color-gradient-primary;
  display: inline-block;
  border: none;

  @if $size == 'large' {
    font-size: toRem(24);
    padding: toRem(12) toRem(32);
    border-radius: toRem(26);
  } @else {
    font-size: toRem(16);
    padding: toRem(12) toRem(16);
    border-radius: toRem(25);
  }

  &:hover,
  &.active,
  &:focus {
    background: $color-blue-500;
  }
}

@mixin button-nav-small {
  @include font-display;
  color: $color-white;
  text-decoration: none;
  padding: toRem(8) toRem(20);
  border-radius: toRem(20);
  cursor: pointer;
  border: none;
  display: inline-block;

  &:hover,
  &.active,
  &:focus {
    color: $color-blue-700;
    @include color-gradient-primary;
  }
}
